plugins {
    id 'de.jansauer.poeditor' version '1.0.0'
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.bugsnag.android.gradle'

android {
    namespace 'ch.rmy.android.http_shortcuts'

    compileSdkVersion 32

    kotlinOptions {
        languageVersion = '1.6'
    }

    lint {
        abortOnError false
        disable 'MissingTranslation'
    }

    defaultConfig {
        applicationId 'ch.rmy.android.http_shortcuts'
        minSdkVersion 21
        targetSdkVersion 32
        versionName '2.16.0'
        // 11,(2 digits major),(2 digits minor),(2 digits patch),(2 digits build)
        versionCode 1102170001
        buildConfigField 'String', 'BUGSNAG_API_KEY', "\"${rootProject.ext.bugsnagAPIKey}\""
        buildConfigField 'String', 'BUILD_TIMESTAMP', "\"${rootProject.ext.buildTimestamp}\""
        multiDexEnabled true

        manifestPlaceholders = [
            bugsnagAPIKey: rootProject.ext.bugsnagAPIKey ? rootProject.ext.bugsnagAPIKey : '-'
        ]

        testInstrumentationRunnerArguments = [package: "ch.rmy.android.http_shortcuts"]

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        releaseWithCrashLogging {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    outputFileName = "app-" + (output.getFilter(com.android.build.OutputFile.ABI) ?: "universal") + "-release.apk"
                }
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
            universalApk true
        }
    }

    bundle {
        language {
            enableSplit = false
        }
        density {
            enableSplit = true
        }
        abi {
            enableSplit = true
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
        dataBinding = false
        aidl = false
        renderScript = false
        resValues = false
        shaders = false
    }

    packagingOptions {
        jniLibs {
            excludes += ['META-INF/*']
        }
        resources {
            excludes += ['META-INF/*']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    flavorDimensions 'protocols'
    productFlavors {
        matrix {
            dimension 'protocols'
            applicationIdSuffix 'matrix'
            minSdk 26
        }
        httpOnly {
            dimension 'protocols'
        }
    }
}

if (!rootProject.ext.bugsnagAPIKey) {
    bugsnag {
        uploadJvmMappings = false
        uploadNdkMappings = false
        uploadNdkUnityLibraryMappings = false
        reportBuilds = false
    }
}

project.configure(project.android, {
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        matrix.java.srcDirs += 'src/matrix/kotlin'
        httpOnly.java.srcDirs += 'src/httpOnly/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        debug.java.srcDirs += 'src/withoutCrashLogging/kotlin'
        release.java.srcDirs += 'src/withoutCrashLogging/kotlin'
        releaseWithCrashLogging.java.srcDirs += 'src/withCrashLogging/kotlin'
    }
})

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    /* Matrix */
    matrixImplementation 'net.folivo:trixnity-client:2.0.0'
    matrixImplementation 'net.folivo:trixnity-client-store-exposed:2.0.0'
    matrixImplementation 'com.h2database:h2:2.1.212'
    matrixImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-rx2:1.6.1'
    matrixImplementation 'io.ktor:ktor-client-okhttp:2.0.1'
    matrixImplementation 'ch.qos.logback:logback-classic:1.3.0-alpha15'

    /* Dependency Injection */
    implementation 'com.google.dagger:dagger:2.41'
    kapt 'com.google.dagger:dagger-compiler:2.41'

    /* Support libraries */
    implementation 'androidx.core:core-ktx:1.7.0@aar'
    implementation 'androidx.appcompat:appcompat:1.6.0-alpha03'
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.preference:preference-ktx:1.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'
    implementation 'androidx.core:core-splashscreen:1.0.0-beta02'

    /* Dialogs / Activities */
    implementation('com.afollestad.material-dialogs:core:3.3.0') {
        transitive = true
    }
    implementation 'com.afollestad.material-dialogs:input:3.3.0'
    implementation 'com.github.skydoves:colorpickerview:2.2.4'

    /* Animated progress bar */
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'
    implementation 'com.github.castorflex.smoothprogressbar:library-circular:1.3.0'

    /* Image cropping */
    implementation 'com.github.yalantis:ucrop:2.2.6'

    /* Image display */
    implementation 'com.squareup.picasso:picasso:2.71828'

    /* HTTP & Network */
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'
    implementation 'com.facebook.stetho:stetho:1.6.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.6.0'
    implementation 'io.github.rburgst:okhttp-digest:2.6'
    implementation 'com.github.franmontiel:PersistentCookieJar:v1.0.1'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'

    /* Scheduling */
    implementation 'androidx.work:work-runtime-ktx:2.7.1'
    implementation 'androidx.work:work-rxjava2:2.7.1'

    /* Tasker integration */
    implementation 'com.joaomgcd:taskerpluginlibrary:0.4.2'

    /* Scripting */
    implementation 'com.github.LiquidPlayer:LiquidCore:0.6.2'

    /* Password hashing */
    implementation 'org.mindrot:jbcrypt:0.4'

    /* Crash Reporting */
    releaseWithCrashLoggingImplementation 'com.bugsnag:bugsnag-android:5.16.0'

    /* cURL import & export */
    implementation project(path: ':curl_command')

    /* Favicon fetching */
    implementation project(path: ':favicon_grabber')

    /* JSON serialization & deserialization */
    implementation 'com.google.code.gson:gson:2.8.9'

    /* RX */
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'com.github.tbruyelle:rxpermissions:0.11'
    implementation 'com.victorrendina:rxqueue2:2.0.0'

    /* Testing */
    testImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.robolectric:shadows-multidex:$robolectricVersion"
    testImplementation 'androidx.test:monitor:1.5.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
    androidTestImplementation "junit:junit:$junitVersion"
}

poeditor {
    apiKey = rootProject.ext.poeditorAPIKey
    projectId = rootProject.ext.poeditorProjectId

    terms lang: 'en', file: 'src/main/res/values/strings.xml', updating: 'terms_translations', overwrite: true, sync_terms: true

    // translation definitions omitted as the plugin currently does not support filtering by 'translated' status, making its pull feature unusable
}

apply plugin: 'realm-android'
